provider "aws" {
  region = "us-east-1"  # Change this to your preferred AWS region
}

resource "aws_instance" "grafana_server1" {
  ami           = "ami-084568db4383264d4"
  instance_type = "t3.micro"
  key_name      = "macbook"
  security_groups = ["default"]

  user_data = <<-EOF
    #!/bin/bash
    sudo apt update -y
    sudo apt install -y docker.io nginx curl

    # Start and enable Docker
    sudo systemctl start docker
    sudo systemctl enable docker

    # Run Prometheus
    sudo mkdir -p /opt/prometheus
    sudo tee /opt/prometheus/prometheus.yml > /dev/null <<EOL
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: 'node_exporter'
        static_configs:
          - targets: ['localhost:9100']
    EOL
    sudo docker run -d --name prometheus -p 9090:9090 -v /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus

    # Run Node Exporter
    sudo docker run -d --name node_exporter -p 9100:9100 prom/node-exporter

    # Run Grafana
    sudo docker run -d --name grafana -p 3000:3000 grafana/grafana

    # Configure Nginx Reverse Proxy
    sudo tee /etc/nginx/sites-available/grafana > /dev/null <<EOL
    server {
        listen 80;
        server_name _;

        location / {
            proxy_pass http://localhost:3000/;
            proxy_set_header Host \$host;
            proxy_set_header X-Real-IP \$remote_addr;
            proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto \$scheme;
        }
    }
    EOL

    sudo ln -s /etc/nginx/sites-available/grafana /etc/nginx/sites-enabled/
    sudo systemctl restart nginx
  EOF

  tags = {
    Name = "AMAN-Grafana-Server"
  }
}